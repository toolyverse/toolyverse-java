# ==================== APPLICATION CONFIGURATION ====================
server:
  #  shutdown: graceful
  shutdown: immediate

spring:
  application:
    name: toolyverse

  profiles:
    default: dev

  # ==================== DATASOURCE CONFIGURATION ====================
  data:
    jdbc:
      dialect: mysql
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate.format_sql: true
      envers:
        audit_table_suffix: _history

  # ==================== KAFKA CONFIGURATION ====================
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    # ==================== KAFKA PRODUCER CONFIG ====================
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
    # ==================== KAFKA CONSUMER CONFIG ====================
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
      enable-auto-commit: false
  messages:
    encoding: UTF-8

  # ==================== EMAIL CONFIG ====================
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}

# Actuator configuration for monitoring and management
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
  server:
    port: 8081
  tracing:
    sampling:
      probability: '1.0'

# Logging configuration
logging:
  level:
    root: info
    toolyverse.io: debug
    toolyverse.io.toolyverse.infrastructure.config.filter.RequestResponseLoggingFilter: debug

# ==================== SWAGGER CONFIGURATION ====================
springdoc:
  swagger-ui:
    enabled: true

# ==================== SECURITY CONFIGURATION ====================
security:
  ignored-paths:
    - "/**"
    - "/swagger-resources/**"
    - "/swagger-ui.html/**"
    - "/swagger-ui/**"
    - "/v3/api-docs/**"
    - "/auth/**"
    - "/public/**"
    - "/timezone"
    - "/time"
    - "/hello"
    - "/log-level"
    # Actuator endpoints
    - "/actuator/**"


  # ==================== AWS S3 CONFIGURATION ====================
aws:
  s3:
    region: ${AWS_S3_REGION}
    bucket-name: ${AWS_S3_BUCKET_NAME}
    secret-key: ${AWS_S3_SECRET_KEY}
    access-key: ${AWS_S3_ACCESS_KEY}
    endpoint: ${AWS_S3_ENDPOINT}

# ==================== APP SPECIFIC CONFIGURATION ====================
app-specific-configs:
  constants:
    default-auditor: SYSTEM
  ignored-logging-paths:
    - "/sw.js"
    - "/favicon.ico"
    - "/swagger-ui/**"
    - "/v3/api-docs/**"
    - "/actuator/**"
  security:
    jwt:
      secret-key: ${APP_JWT_SECRET_KEY}
      refresh-token-validity-in-minutes: 90
      token-validity-in-minutes: 60
    encryption:
      secret: ${APP_ENC_SECRET}
  api:
    auth:
      username: ${API_USERNAME}
      password: ${API_PASSWORD}
      token: ${API_TOKEN}
  storage:
    directory: ./storage
    allowed-extensions: jpg,jpeg,png,pdf,doc,docx

